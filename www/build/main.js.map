{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV6D;AACf;AAQX;AACqB;AACqB;AAEe;AAC5C;AAOhD;IAaE;QACE,wBAAwB;QACjB,OAAsB,EACrB,WAAwB,EACxB,cAA8B,EAC9B,EAAuB,EACvB,SAA0B,EAC1B,MAAwB;QALzB,YAAO,GAAP,OAAO,CAAe;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,OAAE,GAAF,EAAE,CAAqB;QACvB,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAkB;QAjBlC,WAAM,GAAU,EAAE,CAAC;QAMnB,mBAAc,GAAY,IAAI,CAAC;QAC/B,iBAAY,GAAY,IAAI,CAAC;QAC7B,kBAAa,GAAY,IAAI,CAAC;QAU1B,sCAAsC;QACxC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC,iBAAO;YACtD,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,WAAC,IAAI,mBAAG,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,IAAK,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAG,EAA5C,CAA4C,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,0DAA0D;IAC1D,iCAAc,GAAd;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,gCAAgC;IAChC,kCAAe,GAAf;QACE,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,aAAG;YACzB,MAAM,CAAC,IAAI,yEAAM,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAyC;IACzC,0BAAO,GAAP;QAAA,iBA8CC;QA7CC,IAAI,aAAa,CAAC;QAClB,6BAA6B;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAC3B,aAAa,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,aAAa,GAAG,IAAI,yEAAM,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACnD,CAAC;QACD,sBAAsB;QACtB,IAAI,UAAU,GAAqB;YACjC,uBAAuB;YACvB,MAAM,EAAE;gBACN,MAAM,EAAE;oBACN,GAAG,EAAE,aAAa,CAAC,GAAG;oBACtB,GAAG,EAAE,aAAa,CAAC,GAAG;iBACvB;gBACD,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,EAAE;aACT;YACD,uCAAuC;YACvC,QAAQ,EAAE;gBACR,gBAAgB,EAAE,IAAI;aACvB;SACF,CAAC;QACF,kBAAkB;QAClB,IAAI,CAAC,GAAG,GAAG,6EAAU,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QACvD,+CAA+C;QAC/C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,kFAAe,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;YAC3C,6BAA6B;YAC7B,KAAI,CAAC,GAAG,CAAC,EAAE,CAAC,kFAAe,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnD,sBAAsB;gBACtB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC7B,6CAA6C;gBAC7C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,kBAAkB;gBAClB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACtB,8BAA8B;gBAC9B,KAAI,CAAC,GAAG,CAAC,WAAW,CAAC;oBACnB,MAAM,EAAE,KAAI,CAAC,MAAM;oBACnB,OAAO,EAAE,SAAS;oBAClB,OAAO,EAAE,CAAC;iBACX,CAAC,CAAC;gBACH,2DAA2D;gBAC3D,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAC1G,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yDAAyD;IACzD,qCAAkB,GAAlB;QAAA,iBAIC;QAHC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAG;YACtB,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAA2D;IAC3D,2BAAQ,GAAR;QAAA,iBAkBC;QAjBC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,iFAAiF;YACjF,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;iBACvE,IAAI,CAAC,UAAC,MAAmC;gBACxC,kDAAkD;gBAClD,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;gBACxE,+BAA+B;gBAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,GAAG;gBACT,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;YACH,0CAA0C;YAC1C,qFAAqF;QACzF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,CAAC,uCAAuC,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;IAED,wDAAwD;IACxD,+CAA+C;IAC/C,qCAAkB,GAAlB,UAAmB,GAAG;QAAtB,iBAsCC;QArCC,uBAAuB;QACvB,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,0CAA0C;QAC1C,EAAE,CAAC,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC;YAClB,iBAAiB;YACjB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YACjB,uBAAuB;YACvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,uDAAuD;YACvD,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,cAAI;gBAC1D,yBAAyB;gBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACT,iBAAiB;oBACjB,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3B,0DAA0D;oBAC1D,wBAAwB;oBACxB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,CAAC;oBACD,yBAAyB;oBACzB,KAAI,CAAC,GAAG,CAAC,WAAW,CAAC;wBACnB,MAAM,EAAE,SAAS;wBACjB,OAAO,EAAE,SAAS;wBAClB,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;oBACH,sDAAsD;oBACtD,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC3D,mEAAmE;oBACnE,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;gBAC1B,CAAC;YACH,CAAC,CAAC,CAAC;YACH,wCAAwC;YACxC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,wEAAwE;YACxE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC;IACH,CAAC;IAED,uDAAuD;IACvD,4BAAS,GAAT,UAAU,MAAM;QACd,sCAAsC;QACtC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;YACjB,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE;gBACR,GAAG,EAAE,MAAM,CAAC,GAAG;gBACf,GAAG,EAAE,MAAM,CAAC,GAAG;aAChB;SACF,CAAC,CAAC;IACL,CAAC;IAED,+BAA+B;IAC/B,4BAAS,GAAT;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,wCAAwC;QACxC,IAAI,CAAC,YAAY,CAAC,oDAAoD,CAAC,CAAC;IAC1E,CAAC;IAEH,mEAAmE;IACjE,0BAAO,GAAP,UAAQ,OAAe,EAAE,MAAa;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,mCAAmC,CAAC,CAAC;IACzD,CAAC;IAED,uDAAuD;IACvD,6BAAU,GAAV;QACE,oEAAoE;QACpE,2DAA2D;QAC3D,4BAA4B;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC;YAChC,2BAA2B;YAC3B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACxC,gBAAgB;YAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,kBAAkB;YAClB,IAAI,CAAC,YAAY,CAAC,+BAA+B,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED,wCAAwC;IACxC,2BAAQ,GAAR;QACE,cAAc;QACd,MAAM;QACN,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACjB,eAAe;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,kBAAkB;QAClB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,8BAA8B;QAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,2BAA2B;IAC3B,8BAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;IAC/C,CAAC;IAED,gEAAgE;IAChE,6BAAU,GAAV,UAAW,GAAW;QACpB,IAAI,OAAO,GAAwB;YACjC,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;SACT;QACD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAEH,yDAAyD;IACvD,+BAAY,GAAZ,UAAa,GAAW;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,GAAG;YACZ,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;QAEH,gDAAgD;QAChD,KAAK,CAAC,YAAY,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,sDAAsD;IACtD,kCAAkC;IAClC,iCAAc,GAAd,UAAe,UAAU,EAAE,QAAQ,EAAE,SAAS;QAC5C,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,kEAAkE;QAClE,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;IAC9B,CAAC;IA/PU,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;2FAgB+B;YACR,qFAAW;YACR,kFAAc;YAC1B,uEAAmB;YACZ,wEAAe;YACnB,KAAiB;OApBvB,QAAQ,CAgQpB;IAAD,CAAC;AAAA;SAhQY,QAAQ,e;;;;;;;;;;;ACrBsD;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AACG;AACO;AACvB;AACM;AACS;AAEvD,uBAAuB;AAC0B;AACiB;AAElE,wBAAwB;AACjB,IAAM,cAAc,GAAG;IAC5B,MAAM,EAAE,yCAAyC;IACjD,UAAU,EAAE,8CAA8C;IAC1D,WAAW,EAAE,qDAAqD;IAClE,SAAS,EAAE,8BAA8B;IACzC,aAAa,EAAE,0CAA0C;IACzD,iBAAiB,EAAE,cAAc;CAClC,CAAC;AAgCF;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA9BrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACL,kEAAQ;aACT;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,wEAAiB,CAAC,aAAa,CAAC,cAAc,CAAC;gBAC/C,yFAAyB;gBACzB,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;oBACE,KAAK,EAAE,EAEN;iBACF,CAAC;aACC;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,kEAAQ;aACT;YACD,SAAS,EAAE;gBACT,2EAAS;gBACT,iFAAY;gBACZ,6EAAU;gBACV,qFAAc;gBACd,8EAAW;gBACX,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;aACrD;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACvDoB;AACD;AACY;AACM;AAEb;AAI9C;IAGE,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,KAAK;QAHjB,wEAAS,CAAC;WACc;SACxB,CAAC;cAIgF;OAHrE,KAAK,CAWjB;IAAD,CAAC;AAAA;SAXY,KAAK,2B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 144;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 144\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 186;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 186\n// module chunks = 0","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {\n  GoogleMaps,\n  GoogleMap,\n  GoogleMapsEvent,\n  GoogleMapOptions,\n  LatLng,\n  CameraPosition\n} from '@ionic-native/google-maps';\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Observable } from 'rxjs/Observable';\nimport { NativeGeocoder, NativeGeocoderReverseResult } from '@ionic-native/native-geocoder';\nimport { ToastController } from 'ionic-angular';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  // Variables\n  map: GoogleMap;\n  points: any[] = [];\n  pathsRef: AngularFireList<any>;\n  paths: Observable<any[]>;\n  path: Observable<any>;\n  pathsArr: any[];\n  selectedPath: string;\n  deleteDisabled: boolean = true;\n  saveDisabled: boolean = true;\n  eraseDisabled: boolean = true;\n\n  constructor(\n    // Constructor variables\n    public navCtrl: NavController,\n    private geolocation: Geolocation,\n    private nativeGeocoder: NativeGeocoder,\n    private db: AngularFireDatabase,\n    private toastCtrl: ToastController,\n    private detRef:ChangeDetectorRef) {\n      // Variables that concern the database\n    this.pathsRef = db.list('/paths');\n    this.paths = this.pathsRef.snapshotChanges().map(changes => {\n      return changes.map(c => ({ key: c.payload.key, ...c.payload.val() }));\n    });\n\n  }\n\n  // Load the map and the saved paths to the selectable menu\n  ionViewDidLoad() {\n    this.loadMap();\n    this.populateSelectable();\n  }\n\n  // Get the location of the user!\n  getUserLocation() {\n    this.getLocation().then(res => {\n      return new LatLng(res.coords.latitude, res.coords.longitude);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // The whole thing that initiates the map\n  loadMap() {\n    let starterCoords;\n    // Define the starting coords\n    if (this.getUserLocation()) {\n      starterCoords = this.getUserLocation();\n    } else {\n      starterCoords = new LatLng(35.363933, 24.482068);\n    }\n    // Set the map options\n    let mapOptions: GoogleMapOptions = {\n      // Zoom area of the map\n      camera: {\n        target: {\n          lat: starterCoords.lat,\n          lng: starterCoords.lng\n        },\n        zoom: 16,\n        tilt: 30\n      },\n      // Make the \"myLocation\" button visible\n      controls: {\n        myLocationButton: true\n      }\n    };\n    // Create the map!\n    this.map = GoogleMaps.create('map_canvas', mapOptions);\n    // Wait the MAP_READY before using any methods.\n    this.map.one(GoogleMapsEvent.MAP_READY).then(() => {\n      // Event for clicking the map\n      this.map.on(GoogleMapsEvent.MAP_CLICK).subscribe(data => {\n        // Current click point\n        let point = JSON.parse(data);\n        // Store the point in global temporary memory\n        this.points.push(point);\n        // Show the marker\n        this.addMarker(point);\n        // Add the polyline to the map\n        this.map.addPolyline({\n          points: this.points,\n          'color': '#16dddd',\n          'width': 3,\n        });\n        // Arrange the appearance of control buttons accordingly...\n        this.arrangeButtons(((this.selectedPath) && (this.selectedPath == \"000\")) ? true : false, false, false);\n      });\n    });\n  }\n\n  // Fill the top dropdown menu with data from the database\n  populateSelectable() {\n    this.paths.subscribe(res => {\n      this.pathsArr = res;\n    });\n  }\n\n  // The function that runs when the \"save\" button is clicked\n  savePath() {\n    if (this.points) {\n      // Get information about the first location in order to have a name for the entry\n      this.nativeGeocoder.reverseGeocode(this.points[0].lat, this.points[0].lng)\n        .then((result: NativeGeocoderReverseResult) => {\n          // Save the entry with a name and the points array\n          this.addPath(result.thoroughfare + \", \" + result.locality, this.points);\n          // Clear the map after the save\n          this.clearMap();\n        })\n        .catch((err) => {\n          console.log(\"error: \", err.message);\n        });\n        // If no data, inform the user accordinglt\n        // In the highly unlikely case where the button would be enabled with an empty map :)\n    } else {\n      alert(\"Δεν υπάρχουν δεδομένα προς αποθήκευση\");\n    }\n  }\n\n  // Show the selected path (from the dropdown) to the map\n  // It takes as a parameter the KEY of the entry\n  changeSelectedPath(key) {\n    // Declare an empty arr\n    let coordsArr = [];\n    // If the selection is NOT the default one\n    if (key !== \"000\") {\n      // Clear the map!\n      this.map.clear();\n      // Clear the points arr\n      this.points = [];\n      // Get the data (by using the key and the db reference)\n      this.db.object('paths/' + key).valueChanges().subscribe(data => {\n        // If there exist data...\n        if (data) {\n          // Get the coords\n          coordsArr = data[\"coords\"];\n          // Iterate the coords array on order to add all the points\n          // as markers to the map\n          for (let i = 0; i < coordsArr.length; i++) {\n            this.addMarker(coordsArr[i]);\n          }\n          // Draw also the polyline\n          this.map.addPolyline({\n            points: coordsArr,\n            'color': '#16dddd',\n            'width': 3,\n          });\n          // Make the map focus on the middle point of the array\n          this.moveCamera(coordsArr[Math.ceil(coordsArr.length / 2)])\n          // Assign our current choice to the global points array (temporary)\n          this.points = coordsArr;\n        }\n      });\n      // Handle the appearance of the buttons!\n      this.arrangeButtons(false, true, false);\n    } else {\n      // If the selection is the default one (no selection) just clear the map\n      this.clearMap();\n    }\n  }\n\n  // Function that is called when we want to add a marker\n  addMarker(coords) {\n    // Add the marker with some properties\n    this.map.addMarker({\n      icon: 'cyan',\n      animation: 'DROP',\n      position: {\n        lat: coords.lat,\n        lng: coords.lng\n      }\n    });\n  }\n\n  // Function that clears the map\n  erasePath() {\n    this.clearMap();\n    // Inform the user that tha map is CLEAR\n    this.presentToast(\"Πραγματοποιήθηκε εκκαθάριση των σημείων του χάρτη!\");\n  }\n\n// Function that actually saves a given path object to the database\n  addPath(address: string, coords: any[]) {\n    this.pathsRef.push({ address: address, coords: coords });\n    this.presentToast(\"Η διαδρομή αποθηκεύτηκε επιτυχώς!\");\n  }\n\n  // Function that is called when the user deletes a path\n  deletePath() {\n    // Check the selected path (on the dropdown) that she wants to erase\n    // It  must not be the default one, because it has no data!\n    // so, if not the default...\n    if (this.selectedPath !== \"000\") {\n      // Remove the selected path\n      this.pathsRef.remove(this.selectedPath);\n      // Clear the map\n      this.clearMap();\n      // Inform the user\n      this.presentToast(\"Η διαδρομή διεγράφη επιτυχώς!\");\n    }\n  }\n\n  // The REAL function that clears the map\n  clearMap() {\n    // WIPE IT ALL\n    // map\n    this.map.clear();\n    // points array\n    this.points = [];\n    // reset selection\n    this.selectedPath = \"000\";\n    // disable all control buttons\n    this.arrangeButtons(true, true, true);\n  }\n\n  // Get the current position\n  getLocation() {\n    return this.geolocation.getCurrentPosition();\n  }\n\n  // Function that executes the camera movement (focus of the map)\n  moveCamera(loc: LatLng) {\n    let options: CameraPosition<any> = {\n      target: loc,\n      zoom: 16,\n      tilt: 10\n    }\n    this.map.moveCamera(options);\n  }\n\n// The toast that informs the user, it appears at the top\n  presentToast(msg: string) {\n    let toast = this.toastCtrl.create({\n      message: msg,\n      duration: 3000,\n      position: 'top'\n    });\n\n    // For whatever reason a toast must be dismissed\n    toast.onDidDismiss(() => {\n      console.log('Dismissed toast');\n    });\n    toast.present();\n  }\n\n  // The frequent function that handles buttons ability!\n  // A boolean value for each button\n  arrangeButtons(deleteBool, saveBool, eraseBool) {\n    this.deleteDisabled = deleteBool;\n    this.saveDisabled = saveBool;\n    this.eraseDisabled = eraseBool;\n    // Force the dom to detect the changes (for better responsiveness)\n    this.detRef.detectChanges();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { NativeGeocoder } from '@ionic-native/native-geocoder';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { GoogleMaps } from '@ionic-native/google-maps';\n\n// AngularFire2 Modules\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\n// AngularFire2 Settings\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyD_K1uk9h_tEXg9s2U3R96l9gJ8j2eb5fw\",\n  authDomain: \"polylinemaphyb-1512604430698.firebaseapp.com\",\n  databaseURL: \"https://polylinemaphyb-1512604430698.firebaseio.com\",\n  projectId: \"polylinemaphyb-1512604430698\",\n  storageBucket: \"polylinemaphyb-1512604430698.appspot.com\",\n  messagingSenderId: \"453969756088\"\n};\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFireDatabaseModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    GoogleMaps,\n    NativeGeocoder,\n    Geolocation,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}